<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="yan.dong.dao.UserMapper">
    <select id="findAllUserByPage" parameterType="yan.dong.domain.UserVo" resultType="yan.dong.domain.User">
        select * from user
        <where>
            <if test="true">
                and is_del != 1
            </if>
            <if test="username != null and username != ''">
                and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time BETWEEN #{startCreateTime} AND #{endCreateTime}
            </if>
        </where>
    </select>

    <!-- 修改用户状态 -->
    <update id="updateUserStatus" parameterType="yan.dong.domain.User">
        update user set status = #{status} where id = #{id}
    </update>

<!--    用户登录-->
    <select id="login" resultType="yan.dong.domain.User" parameterType="yan.dong.domain.User">
        select * from user where phone = #{phone}
    </select>

<!--&lt;!&ndash;    根据ID查询用户关联的角色信息  角色分配（回显）&ndash;&gt;-->
<!--    <select id="findUserRelationRoleById" parameterType="int" resultType="yan.dong.domain.Role">-->
<!--        SELECT r.id, r.code, r.name, r.description FROM roles r INNER JOIN user_role_relation ur ON r.`id` = ur.`role_id` INNER JOIN USER u ON ur.`user_id` = u.`id` WHERE u.`id` = #{id}-->
<!--    </select>-->


<!--    根据用户ID清空中间表关联关系-->
    <delete id="deleteUserContextRole" parameterType="int">
        delete from user_role_relation where user_id = #{userid}
    </delete>

<!--    用户角色关联-->
    <insert id="userContextRole" parameterType="yan.dong.domain.User_Role_relation">
        insert into user_role_relation values(null,#{userId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <!-- 1. 根据用户ID查询关联的角色信息 public List<Role>  findUserRelationRoleById(Integer id);-->
    <select id="findUserRelationRoleById" parameterType="int" resultType="yan.dong.domain.Role">
        SELECT * FROM roles r INNER JOIN user_role_relation ur ON r.id = ur.role_id WHERE ur.user_id = #{userid}
    </select>


    <!--2.根据角色ID，查询角色所拥有的顶级菜单（-1）-->
    <select id="findParentMenuByRoleId" parameterType="java.util.List" resultType="yan.dong.domain.Menu">
        SELECT
        DISTINCT m.*
        FROM
        roles r INNER JOIN role_menu_relation rm ON r.id = rm.role_id
        INNER JOIN menu m ON m.id =rm.menu_id
        WHERE
        m.parent_id = -1 AND r.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>

    </select>


    <!--3. 根据PID，查询子菜单信息-->
    <select id="findSubMenuByPid" parameterType="int" resultType="yan.dong.domain.Menu">
        SELECT * FROM menu WHERE parent_id = #{pid}
    </select>


    <!--4.获取用户拥有的资源权限信息-->
    <select id="findResourceByRoleId" parameterType="java.util.List" resultType="yan.dong.domain.Resource">
        SELECT
        DISTINCT r.*
        FROM
        resource r INNER JOIN role_resource_relation rr ON r.id = rr.resource_id
        INNER JOIN roles ro ON ro.id = rr.role_id
        WHERE ro.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>


    </select>

</mapper>